---
description:
globs:
alwaysApply: false
---
# 콘텐츠 및 MDX 관리 규칙

## 📚 콘텐츠 아키텍처

### 콘텐츠 구조
- 기술 글 디렉토리: [__contents/articles](mdc:__contents/articles)
- 문제 해결: [__contents/problem-solving](mdc:__contents/problem-solving)
- 독서 디렉토리: [__contents/books](mdc:__contents/books)
- 콘텐츠 API 로직: [src/libs/api.ts](mdc:src/libs/api.ts)

### 에셋 관리
- 콘텐츠 이미지: `public/assets/contents/[post-slug]/`
- 공유 에셋: `public/assets/`
- 폰트 파일: `public/assets/fonts/`

## ✅ 필수 준수 사항 - 콘텐츠 규칙

### 1. MDX Front Matter 표준
```yaml
---
title: "설명적이고 SEO 친화적인 제목 (최대 60자)"
description: "매력적인 메타 설명 (SEO용 최대 160자)"
thumbnail: "/assets/contents/post-slug/thumbnail.png"
tags: ["javascript", "react", "nextjs"]
createdAt: "2024-01-15"
---
```

### 2. 콘텐츠 파일 명명
- **반드시** 파일명에 kebab-case 사용: `my-awesome-post.mdx`
- **반드시** 디렉토리명과 포스트 슬러그 일치
- **반드시** 모든 콘텐츠 파일에 `.mdx` 확장자 사용
- **반드시** 파일명이 URL 안전한지 확인 (공백, 특수문자 없음)

### 3. 이미지 에셋 구성
- **반드시** 전용 폴더 생성: `public/assets/contents/[post-slug]/`
- **반드시** 순차적 명명 사용: `1.png`, `2.png`, `3.png`
- **반드시** 추가 전에 이미지 최적화 (WebP 선호)
- **반드시** 접근성을 위한 설명적 alt 텍스트 포함

### 4. 콘텐츠 구조 요구사항
- **반드시** 매력적인 소개 단락으로 시작
- **반드시** 적절한 제목 계층 사용 (h1 → h2 → h3)
- **반드시** 관련된 곳에 코드 예제 포함
- **반드시** 결론이나 요약으로 마무리

### 5. SEO 및 메타데이터 표준
- **반드시** 타겟 키워드를 포함한 설명적 제목 작성
- **반드시** 클릭을 유도하는 메타 설명 작성
- **반드시** 관련 태그 사용 (포스트당 3-5개 태그)
- **반드시** YYYY-MM-DD 형식으로 생성 날짜 포함

## 🚫 금지 사항 - 콘텐츠 위반

### 1. 파일 구조 위반
- **절대** `__contents/` 디렉토리 외부에 콘텐츠 파일 배치 금지
- **절대** 파일명에 공백이나 특수문자 사용 금지
- **절대** 일치하는 디렉토리 구조 없이 콘텐츠 생성 금지
- **절대** 같은 디렉토리에 다른 콘텐츠 타입 혼재 금지

### 2. Front Matter 위반
- **절대** 완전한 front matter 없이 MDX 파일 생성 금지
- **절대** 일관되지 않은 날짜 형식 사용 금지
- **절대** 필수 필드 생략 금지 (title, description, thumbnail, tags, createdAt)
- **절대** 내부 이미지에 절대 URL 사용 금지

### 3. 이미지 에셋 위반
- **절대** 콘텐츠에서 절대 경로로 이미지 참조 금지
- **절대** 최적화되지 않은 큰 이미지 사용 금지 (>500KB)
- **절대** 무작위 디렉토리에 이미지 배치 금지
- **절대** 이미지의 alt 텍스트 누락 금지

### 4. 콘텐츠 품질 위반
- **절대** 교정 없이 게시 금지
- **절대** 오해의 소지가 있는 제목이나 설명 사용 금지
- **절대** 코드 구문 강조 생략 금지
- **절대** 지나치게 긴 단락 생성 금지 (4문장 초과)

### 5. SEO 위반
- **절대** 포스트 간 제목 중복 금지
- **절대** 일반적인 설명 사용 금지 ("이것은 ~에 관한 포스트입니다...")
- **절대** 제목/설명에 키워드 과도 삽입 금지
- **절대** 생성 날짜 업데이트 누락 금지

## 📝 MDX 컴포넌트 통합

### 커스텀 컴포넌트 사용법
```mdx
// 프로젝트의 커스텀 MDX 컴포넌트 사용
<Blockquote>
이것은 강조된 인용문이나 중요한 노트입니다.
</Blockquote>

// 적절한 최적화가 된 이미지
![Alt 텍스트 설명](mdc:assets/contents/post-slug/1.png)

// 언어 지정이 된 코드 블록
```javascript
const example = '구문 강조를 위해 항상 언어를 지정하세요';
```

### 코드 블록 표준
- **반드시** 구문 강조를 위한 언어 지정
- **반드시** 예제에서 의미 있는 변수명 사용
- **반드시** 복잡한 로직에 주석 포함
- **반드시** 게시 전에 코드 예제 테스트

## 🎯 콘텐츠 타입 가이드라인

### 기술 글 콘텐츠
- 기술 튜토리얼, 설명, 인사이트에 초점
- 실용적 예제와 실제 애플리케이션 포함
- 목표 길이: 800-2500단어
- 기술적 정확성 사용 및 필요시 출처 인용

### 문제 해결 콘텐츠
- 항상 문제 설명과 제약사항 포함
- 가능한 경우 여러 해결 접근법 제공
- 시간/공간 복잡도 분석 설명
- 완전하고 테스트된 코드 솔루션 포함

### 독서 콘텐츠
- 책 세부정보로 시작 (저자, 출간연도)
- 핵심 인사이트와 개인적 통찰 포함
- 개발 경험과 개념 연결
- 실행 가능한 권장사항 제공

## 🔍 콘텐츠 검토 프로세스

### 게시 전 체크리스트
- [ ] Front matter 완성 및 정확성
- [ ] 모든 이미지 최적화 및 적절한 참조
- [ ] 코드 예제 테스트 및 구문 강조
- [ ] 맞춤법 및 문법 검사
- [ ] 링크 검증 및 접근성
- [ ] SEO 메타데이터 최적화
- [ ] 모바일 읽기 경험 테스트

### 품질 표준
- **반드시** 타겟 독자(개발자)를 위해 작성
- **반드시** 실용적 인사이트를 통한 가치 제공
- **반드시** 일관된 톤과 목소리 유지
- **반드시** 기술 정보 팩트체크

## 🚀 콘텐츠 최적화

### 성능 고려사항
- **반드시** 이미지를 적절히 압축
- **반드시** 가능한 경우 WebP 형식 사용
- **반드시** 스크롤 아래 이미지 지연 로딩
- **반드시** 외부 리소스 의존성 최소화

### 접근성 표준
- **반드시** 설명적 링크 텍스트 사용
- **반드시** 모든 이미지에 alt 텍스트 제공
- **반드시** 적절한 제목 계층 유지
- **반드시** 충분한 색상 대비 확보

### SEO 모범 사례
- **반드시** 타겟 키워드를 자연스럽게 포함
- **반드시** 관련 포스트로의 내부 링크 사용
- **반드시** 추천 스니펫에 최적화
- **반드시** 클릭을 유도하는 매력적인 제목 생성

## 📊 콘텐츠 분석 및 유지보수

### 콘텐츠 감사 프로세스
1. 포스트 성과 지표 검토
2. 오래된 기술 정보 업데이트
3. 깨진 링크와 이미지 수정
4. 검색 데이터 기반 SEO 개선
5. 새로운 관련 콘텐츠로 내부 링크 추가

### 유지보수 일정
- 월간: 깨진 링크와 이미지 확인
- 분기별: 기술 콘텐츠의 정확성 업데이트
- 연간: 상시 콘텐츠 검토 및 새로고침

## 📚 작성 가이드라인

### 기술 작성 표준
- **반드시** 타겟 독자에게 명확하게 개념 설명
- **반드시** 가능한 경우 능동태 사용
- **반드시** 긴 콘텐츠를 소제목으로 분할
- **반드시** 실용적 예제와 사용 사례 포함

### 코드 문서화
- **반드시** 코드가 어떻게가 아닌 무엇을 하는지 설명
- **반드시** 예제에 에러 처리 포함
- **반드시** 관련된 경우 좋은 사례와 나쁜 사례 모두 표시
- **반드시** 코드 스니펫에 맥락 제공

---

**기억하세요**: 훌륭한 콘텐츠는 교육하고, 영감을 주며, 지속적인 가치를 제공합니다. 모든 포스트는 독자가 개발자로서 성장하도록 도우면서 당신의 전문성과 기예에 대한 열정을 반영해야 합니다.
